{"version":3,"sources":["components/UI/NavBar/Navbar.js","components/general/Type/Type.js","components/general/Loader/Loader.js","components/builder/PokeTeam/TeamMember/TeamMember.js","components/builder/PokeTeam/PokeTeam.js","components/general/PokeCard/PokeCard.js","hooks/useFormState.js","components/builder/PokeGrid/PokeGrid.js","components/builder/Builder.js","components/team-page/TeamMember/MoveModal/MoveModalForm.js","components/UI/Background/Background.js","components/team-page/TeamMember/Move/Move.js","hooks/useToggleState.js","components/team-page/TeamMember/TeamMemberInfo.js","components/team-page/SavedTeam.js","components/UI/SideDrawer/SideDrawer.js","App.js","index.js"],"names":["Navbar","props","className","onClick","open","src","alt","border","exact","to","memo","color","type","key","uuid","style","backgroundColor","toUpperCase","Loader","height","width","padding","capital","index","useState","types","setTypes","useEffect","mounted","a","url","axios","get","pokeTypeData","getTypes","data","getType","console","log","length","map","Type","id","name","font","remove","scrolled","team","pokeTeam","pokemon","PokeCard","useFormState","initialVal","value","setValue","e","target","addToTeam","pokeGrid","regionPokemon","region","setRegion","pokemon_species","entry_number","captital","charAt","slice","onSubmit","evt","preventDefault","onChange","saveTeam","userTeam","pokeList","setList","regionList","setRegionList","setTeam","setScrolled","teamSaved","setSaved","undefined","idFound","setFound","pokeData","pokemon_entries","getPokemon","window","addEventListener","handleScroll","removeEventListener","scrollY","filter","alert","every","MoveModalForm","pokeName","syncMoves","setForm","moves","fixName","invalid","message","formInvalid","setInvalid","move1","move2","move3","move4","moveForm","setMoves","checkValid","arr","move","myArray","Set","size","moveSelect","moveName","fixedName","Object","values","Background","cancel","Move","setName","setType","pp","setPP","isLoaded","setLoading","getMoveData","useToggle","state","setState","toggler","setLoaded","useToggleState","formOn","getIndividualData","str","includes","split","join","moveDisplay","localStorage","getItem","i","push","JSON","parse","displayMoves","setItem","stringify","deleteTeam","editTeam","redirect","setRedirect","member","SideDrawer","toggle","attachedClasses","App","editing","setEditing","showSideDrawer","drawerToggle","getTeam","clear","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ef1ad66b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Navbar.css'\r\n\r\nconst Navbar = props => (\r\n    <div className='NavBar'>\r\n        <div className='navItemContainer'>\r\n            <div className='DrawerToggle navItem' onClick={props.open}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            <div className='navItem'>\r\n                <img className='mainLogo' src=\"https://fontmeme.com/permalink/200113/d3dec358ccaaec9783bff84033b9b438.png\" alt=\"pokemon-font\" border=\"0\" />\r\n            </div>\r\n            <div className='linkContainer'>\r\n                <NavLink exact className='navLinks' to='/poke-builder/'>Builder</NavLink>\r\n                <NavLink exact className='navLinks' to='/poke-builder/my-team'>Your Team</NavLink>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Navbar\r\n","import React, { memo } from 'react'\r\nimport './Types.css'\r\nimport uuid from 'uuid'\r\n\r\nconst type = ({ type }) => {\r\n    let color;\r\n    switch (type) {\r\n        case ('fire'):\r\n            color = '#f72516'\r\n            break;\r\n        case ('water'):\r\n            color = '#0384fc'\r\n            break;\r\n        case ('bug'):\r\n            color = '#94b842'\r\n            break;\r\n        case ('dark'):\r\n            color = '#544a32'\r\n            break;\r\n        case ('dragon'):\r\n            color = '#4547ba'\r\n            break;\r\n        case ('electric'):\r\n            color = '#ffd817'\r\n            break;\r\n        case ('fairy'):\r\n            color = '#ffb0df'\r\n            break;\r\n        case ('fighting'):\r\n            color = '#702d00'\r\n            break;\r\n        case ('flying'):\r\n            color = '#54a1ff'\r\n            break;\r\n        case ('ghost'):\r\n            color = '#473da1'\r\n            break;\r\n        case ('grass'):\r\n            color = '#05b53a'\r\n            break;\r\n        case ('ground'):\r\n            color = '#a19064'\r\n            break;\r\n        case ('ice'):\r\n            color = '#03f0fc'\r\n            break;\r\n        case ('normal'):\r\n            color = '#b0b0b0'\r\n            break;\r\n        case ('poison'):\r\n            color = '#7024a3'\r\n            break;\r\n        case ('psychic'):\r\n            color = '#ff40b9'\r\n            break\r\n        case ('rock'):\r\n            color = '#c7c679'\r\n            break;\r\n        case ('steel'):\r\n            color = '#8c8c8c'\r\n            break;\r\n        default:\r\n            color = '#b0b0b0'\r\n            break;\r\n    }\r\n    return (\r\n        <li key={uuid()} className='type' style={{ backgroundColor: `${color}` }}>{type.toUpperCase()}</li>\r\n    )\r\n}\r\n\r\nexport default memo(type)","import React from 'react'\r\nimport './Loader.css'\r\n\r\nconst Loader = props => (\r\n    <div className=\"loader\" style={{ height: props.height, width: props.width, padding: props.padding }}></div >\r\n)\r\nexport default Loader\r\n","import React, { useState, useEffect, memo } from 'react'\r\nimport axios from 'axios'\r\nimport Type from '../../../general/Type/Type'\r\nimport Loader from '../../../general/Loader/Loader'\r\nimport './TeamMember.css'\r\n\r\nconst TeamMember = ({ capital, index }) => {\r\n    const [types, setTypes] = useState([])\r\n    useEffect(() => {\r\n        let mounted = true\r\n        const getType = async () => {\r\n            const url = `https://pokeapi.co/api/v2/pokemon/${index}`\r\n            const pokeTypeData = await axios.get(url)\r\n            const getTypes = pokeTypeData.data.types\r\n            if (mounted) {\r\n                setTypes(getTypes)\r\n            }\r\n        }\r\n        getType();\r\n        return () => {\r\n            mounted = false\r\n        }\r\n    }, [index])\r\n    console.log(types.length)\r\n    return types.length === 0 ? <div className='teamloader'><Loader /></div> : (\r\n        <div>\r\n            <div className='teamcard' key={capital}>\r\n                <div>\r\n                    <img className='teamImg' alt={capital} src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index}.png`}></img>\r\n                </div>\r\n                <div>\r\n                    <h1>{capital}</h1>\r\n                </div>\r\n            </div>\r\n            <div className='typeList'>\r\n                {types.map(type => (\r\n                    <Type id={index} type={type.type.name} key={type.type.name} font='5px' />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default memo(TeamMember)\r\n","import React, { memo } from 'react'\r\nimport uuid from 'uuid'\r\nimport './PokeTeam.css'\r\nimport TeamMember from './TeamMember/TeamMember'\r\n\r\nconst PokeTeam = ({ remove, scrolled, pokeTeam }) => {\r\n    const team = pokeTeam.map(pokemon => {\r\n        return (\r\n            <div onClick={() => remove(pokemon.id)} key={uuid()}>\r\n                <TeamMember\r\n                    capital={pokemon.name}\r\n                    index={pokemon.id}\r\n                />\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            {!scrolled ? (\r\n                <div>\r\n                    <div>\r\n                        <img className='logo' src='http://pluspng.com/img-png/pokemon-logo-png-pokemon-logo-png-2000.png' alt='logo' />\r\n                    </div>\r\n                    <img className='yourName' src=\"https://fontmeme.com/permalink/200108/60c1cef1d3f473f5084fe2ad56548168.png\" alt=\"pokemon-font\" border=\"0\" />\r\n                </div>\r\n            ) : null}\r\n            <div className='teamContainer' >\r\n                {team}\r\n            </div>\r\n        </ div >\r\n    )\r\n}\r\n\r\nexport default memo(PokeTeam)\r\n","import React from 'react'\r\nimport './PokeCard.css'\r\n\r\n\r\nconst PokeCard = ({ name, capital, index }) => (\r\n    <div className='pokecard' key={name}>\r\n        <img className='img' alt={name} src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index}.png`}></img>\r\n        <h1>{capital}</h1>\r\n    </div>\r\n)\r\n\r\nexport default PokeCard","import { useState } from 'react'\r\n\r\nconst useFormState = (initialVal) => {\r\n    const [value, setValue] = useState(initialVal)\r\n    const handleChange = e => {\r\n        setValue(e.target.value)\r\n    }\r\n    const reset = () => {\r\n        setValue('')\r\n    }\r\n    return [value, handleChange, reset]\r\n}\r\n\r\nexport default useFormState","import React, { memo } from 'react'\r\nimport PokeCard from '../../general/PokeCard/PokeCard'\r\nimport useFormState from '../../../hooks/useFormState'\r\nimport './PokeGrid.css'\r\n\r\nconst PokeGrid = ({ addToTeam, pokeGrid, scrolled, regionPokemon }) => {\r\n    const [region, setRegion] = useFormState('')\r\n\r\n    const handleForm = (evt) => {\r\n        evt.preventDefault();\r\n        regionPokemon(region)\r\n    }\r\n\r\n    const pokemon = pokeGrid.map((pokemon) => {\r\n        const name = pokemon.pokemon_species.name\r\n        const id = pokemon.entry_number\r\n        const captital = name.charAt(0).toUpperCase() + name.slice(1)\r\n        return (\r\n            <div onClick={() => addToTeam(captital, id)} key={name}>\r\n                <PokeCard\r\n                    capital={captital}\r\n                    name={name}\r\n                    index={id}\r\n                />\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div className={scrolled}>\r\n            <form className='regionSelect' onSubmit={handleForm}>\r\n                <select value={region} name='regionForm' onChange={setRegion}>\r\n                    <option value=''>Region</option>\r\n                    <option value='1'>Kanto</option>\r\n                    <option value='2'>Johto</option>\r\n                    <option value='3'>Hoenn</option>\r\n                    <option value='4'>Sinnoh</option>\r\n                    <option value='5'>Unova</option>\r\n                    <option value='6'>Kalos</option>\r\n                </select>\r\n                <button type='submit'>Find</button>\r\n            </form>\r\n            <div className='pokeGrid'>\r\n                {pokemon}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(PokeGrid)\r\n","import React, { useState, useEffect, memo } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\nimport PokeTeam from './PokeTeam/PokeTeam'\r\nimport PokeGrid from './PokeGrid/PokeGrid'\r\nimport './Builder.css'\r\n\r\nconst Builder = ({ saveTeam, userTeam }) => {\r\n    const [pokeList, setList] = useState([])\r\n    const [regionList, setRegionList] = useState([])\r\n    const [pokeTeam, setTeam] = useState([])\r\n    const [scrolled, setScrolled] = useState(false)\r\n    const [teamSaved, setSaved] = useState(false)\r\n    const [idFound, setFound] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        const getPokemon = async () => {\r\n            const url = `https://pokeapi.co/api/v2/pokedex/national/`\r\n            const pokemon = await axios.get(url)\r\n            const pokeData = pokemon.data.pokemon_entries\r\n            setList([...pokeData])\r\n            setRegionList([...pokeData])\r\n        }\r\n        getPokemon()\r\n        window.addEventListener('scroll', handleScroll)\r\n        if (userTeam !== '') {\r\n            setTeam(userTeam)\r\n        }\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll)\r\n        }\r\n    }, [userTeam])\r\n\r\n    const handleSave = () => {\r\n        if (pokeTeam.length === 6) {\r\n            saveTeam(pokeTeam)\r\n            setSaved(true)\r\n        } else {\r\n            alert('Team Must Have 6 Members')\r\n        }\r\n    }\r\n\r\n    const handleScroll = () => {\r\n        window.scrollY !== 0 ? setScrolled(true) : setScrolled(false)\r\n    }\r\n\r\n    const removeFromTeam = id => {\r\n        setTeam(pokeTeam.filter(pokemon => pokemon.id !== id))\r\n    }\r\n\r\n    const regionPokemon = (region) => {\r\n        let pokeData = pokeList\r\n        switch (region) {\r\n            case '1':\r\n                pokeData = pokeData.slice(0, 151)\r\n                break;\r\n            case '2':\r\n                pokeData = pokeData.slice(151, 251)\r\n                break;\r\n            case '3':\r\n                pokeData = pokeData.slice(251, 386)\r\n                break;\r\n            case '4':\r\n                pokeData = pokeData.slice(386, 494)\r\n                break;\r\n            case '5':\r\n                pokeData = pokeData.slice(494, 649)\r\n                break;\r\n            case '6':\r\n                pokeData = pokeData.slice(649, 721)\r\n                break;\r\n            default:\r\n                return pokeData\r\n        }\r\n        setRegionList([...pokeData])\r\n    }\r\n\r\n    const addToTeam = (name, id) => {\r\n        const pokeData = {\r\n            name: name,\r\n            id: id\r\n        }\r\n        if (pokeTeam.length <= 5) {\r\n            if (pokeTeam.every(pokemon => pokemon.id !== id)) {\r\n                setFound(false)\r\n                if (!idFound) {\r\n                    setTeam([...pokeTeam, pokeData])\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (teamSaved) {\r\n        return (\r\n            <Redirect to='/poke-builder/my-team' />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='builder' >\r\n            <div className={scrolled ? 'fullTeamFixed' : 'fullTeam'}>\r\n                <PokeTeam pokeTeam={pokeTeam} remove={removeFromTeam} scrolled={scrolled} />\r\n                <div className='teamButtons'>\r\n                    <button onClick={() => setTeam([])} className='clearTeam'>Clear Team</button>\r\n                    <button onClick={handleSave} className='clearTeam'>Save Team</button>\r\n                </div>\r\n            </div>\r\n            <PokeGrid\r\n                scrolled={scrolled ? 'gridComponentFixed' : 'gridComponent'}\r\n                addToTeam={addToTeam}\r\n                pokeGrid={regionList}\r\n                regionPokemon={regionPokemon}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default memo(Builder)\r\n","import React, { useState } from 'react'\r\nimport './MoveModalForm.css'\r\n\r\nconst MoveModalForm = ({ pokeName, syncMoves, setForm, moves, id, fixName }) => {\r\n    const [formInvalid, setInvalid] = useState({ invalid: false, message: '' })\r\n    const [moveForm, setMoves] = useState({\r\n        move1: '',\r\n        move2: '',\r\n        move3: '',\r\n        move4: '',\r\n    })\r\n    const { move1, move2, move3, move4 } = moveForm\r\n\r\n    const onChange = e => setMoves({ ...moveForm, [e.target.name]: e.target.value })\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        checkValid(Object.values(moveForm))\r\n    }\r\n\r\n    const checkValid = arr => {\r\n        if (arr.every(move => move !== '')) {\r\n            const checkIfArrayIsUnique = (myArray) => {\r\n                return myArray.length === new Set(myArray).size;\r\n            }\r\n            if (checkIfArrayIsUnique(arr)) {\r\n                syncMoves(pokeName, arr)\r\n                setForm()\r\n            } else {\r\n                setInvalid({ invalid: true, message: 'All Moves Must Be Unique' })\r\n            }\r\n        } else {\r\n            setInvalid({ invalid: true, message: 'Must Select Four Moves' })\r\n        }\r\n    }\r\n\r\n    const moveSelect = moves.map(move => {\r\n        const moveName = move.move.name\r\n        const fixedName = fixName(moveName)\r\n        return <option key={moveName} value={moveName}>{fixedName}</option>\r\n    })\r\n    return (\r\n        <div>\r\n            <div className='modalForm'>\r\n                <img className='modalImg' alt={pokeName} src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`}></img>\r\n                {formInvalid.invalid && <p className='formInvalid'><i className=\"fas fa-times-circle\"></i> Form Invalid: {formInvalid.message}</p>}\r\n                <form className='' onSubmit={handleSubmit} >\r\n                    <div className='moveSelectForm'>\r\n                        <select className='moveSelect' value={move1} name='move1' onChange={onChange}>\r\n                            <option>Select Move</option>\r\n                            {moveSelect}\r\n                        </select>\r\n                    </div>\r\n                    <div className='moveSelectForm'>\r\n                        <select className='moveSelect' value={move2} name='move2' onChange={onChange}>\r\n                            <option value=''>Select Move</option>\r\n                            {moveSelect}\r\n                        </select>\r\n                    </div>\r\n                    <div className='moveSelectForm'>\r\n                        <select className='moveSelect' value={move3} name='move3' onChange={onChange}>\r\n                            <option value=''>Select Move</option>\r\n                            {moveSelect}\r\n                        </select>\r\n                    </div>\r\n                    <div className='moveSelectForm'>\r\n                        <select className='moveSelect' value={move4} name='move4' onChange={onChange}>\r\n                            <option value=''>Select Move</option>\r\n                            {moveSelect}\r\n                        </select>\r\n                    </div>\r\n                    <button className='clearTeam modalButtons' onClick={setForm}>Cancel</button>\r\n                    <button className='clearTeam modalButtons' type='submit'>Save</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoveModalForm\r\n","import React from 'react'\r\nimport './Background.css'\r\n\r\nconst Background = props => (\r\n    <div className='Background' onClick={props.cancel}></div>\r\n)\r\n\r\nexport default Background\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Type from '../../../general/Type/Type'\r\nimport Loader from '../../../general/Loader/Loader'\r\nimport './Move.css'\r\n\r\nconst Move = props => {\r\n    const [name, setName] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [pp, setPP] = useState('')\r\n    const [isLoaded, setLoading] = useState(false)\r\n\r\n    const fixedName = props.fixName(name)\r\n\r\n    useEffect(() => {\r\n        const getMoveData = async () => {\r\n            const move = await axios.get(`https://pokeapi.co/api/v2/move/${props.name}/`)\r\n            const { name, pp, type } = move.data\r\n            setName(name);\r\n            setType(type.name);\r\n            setPP(pp);\r\n            setLoading(true)\r\n        }\r\n        getMoveData();\r\n    }, [props.name])\r\n\r\n    return (\r\n        <div className='move'>\r\n            {isLoaded ? (\r\n                <div>\r\n                    <h1>{fixedName}</h1>\r\n                    <div className='typePP'>\r\n                        <Type type={type} />\r\n                        <h1>PP  {pp}/{pp}</h1>\r\n                    </div>\r\n                </div>\r\n            ) :\r\n                <Loader height='16px' width='16px' />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Move","import { useState } from 'react'\r\n\r\nconst useToggle = (initialVal = false) => {\r\n    const [state, setState] = useState(initialVal)\r\n    const toggler = () => {\r\n        setState(!state)\r\n    }\r\n    return [state, toggler]\r\n}\r\n\r\nexport default useToggle","import React, { useState, useEffect, memo } from 'react'\r\nimport axios from 'axios'\r\nimport Type from '../../general/Type/Type'\r\nimport MoveModalForm from './MoveModal/MoveModalForm'\r\nimport Background from '../../UI/Background/Background'\r\nimport Move from './Move/Move'\r\nimport Loader from '../../general/Loader/Loader'\r\nimport useToggleState from '../../../hooks/useToggleState'\r\nimport './TeamMemberInfo.css'\r\n\r\nconst TeamMemberInfo = props => {\r\n    const [moves, setMoves] = useState([])\r\n    const [name, setName] = useState('')\r\n    const [types, setTypes] = useState([])\r\n    const [isLoaded, setLoaded] = useState(false)\r\n    const [formOn, setForm] = useToggleState()\r\n\r\n    useEffect(() => {\r\n        const getIndividualData = async () => {\r\n            const pokeData = await axios.get(`https://pokeapi.co/api/v2/pokemon/${props.id}/`)\r\n            const { moves, name, types } = pokeData.data\r\n            setMoves(moves)\r\n            setName(name)\r\n            setTypes(types)\r\n            setLoaded(true)\r\n        }\r\n        getIndividualData();\r\n    }, [props.id])\r\n\r\n    const getSelectedMoves = (name, moves) => {\r\n        window.localStorage.setItem(\r\n            `${name}`,\r\n            JSON.stringify(moves))\r\n    }\r\n\r\n    const fixName = str => {\r\n        let name;\r\n        if (str.includes('-')) {\r\n            let arr = str.split('-')\r\n            const fixedArr = arr.map(str => {\r\n                let fixedMove = str.charAt(0).toUpperCase() + str.slice(1)\r\n                return fixedMove\r\n            })\r\n            name = fixedArr.join(' ')\r\n        } else {\r\n            name = str.charAt(0).toUpperCase() + str.slice(1)\r\n        }\r\n        return name\r\n    }\r\n\r\n    const displayMoves = () => {\r\n        let moveDisplay = []\r\n        if (localStorage.getItem(name) === null) {\r\n            for (let i = 1; i < 5; i++) {\r\n                moveDisplay.push(\r\n                    <div key={`move-${i}`} className='move'>\r\n                        <h1>Move {i}</h1>\r\n                        <div className='typePP'>\r\n                            <Type type={'normal'} />\r\n                            <h1>PP  ?/?</h1>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            const savedMoves = JSON.parse(window.localStorage.getItem(name))\r\n            const moves = savedMoves.map(move => (\r\n                <Move name={move} fixName={fixName} key={move} />\r\n            ))\r\n            moveDisplay = moves\r\n        }\r\n        return moveDisplay\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isLoaded ? (\r\n                <div key={props.id} className='teamMemberInfo'>\r\n                    <div>\r\n                        <p>No. {props.id}</p>\r\n                        <img className='savedTeamImg' alt={props.name} src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${props.id}.png`}></img>\r\n                        <h3>{props.name}</h3>\r\n                        <div className='savedTypeList'>\r\n                            {types.map(type => (\r\n                                <Type id={type.type.name} type={type.type.name} key={type.type.name} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <ul className='moveList'>\r\n                            {displayMoves()}\r\n                            <div className='movesetButton'>\r\n                                <button className='clearTeam cTButton' onClick={setForm}>Edit Moveset</button>\r\n                            </div>\r\n                        </ul>\r\n                    </div>\r\n                    <div key='moves'>\r\n                        {formOn && [\r\n                            <Background\r\n                                cancel={setForm}\r\n                                key='background'\r\n                            />,\r\n                            <MoveModalForm\r\n                                pokeName={name}\r\n                                key='modalForm'\r\n                                moves={moves}\r\n                                syncMoves={getSelectedMoves}\r\n                                setForm={setForm}\r\n                                id={props.id}\r\n                                fixName={fixName}\r\n                            />]\r\n                        }\r\n                    </div>\r\n                </div>\r\n            ) :\r\n                (\r\n                    <div className='teamMemberInfo loaderBox'>\r\n                        <Loader />\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(TeamMemberInfo)\r\n\r\n","import React, { memo, useState } from 'react'\r\nimport TeamMemberInfo from './TeamMember/TeamMemberInfo'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport './SavedTeam.css'\r\n\r\nconst SavedTeam = ({ deleteTeam, editTeam }) => {\r\n    const [redirect, setRedirect] = useState(false)\r\n    const handleDelete = () => {\r\n        deleteTeam()\r\n        setRedirect(true)\r\n        if (redirect) {\r\n            return <Redirect to='/poke-builder' />\r\n        }\r\n    }\r\n    if (localStorage.getItem(\"savedTeam\") === null) {\r\n        return (\r\n            <div className='noTeam'>\r\n                <h1 >You don't have a saved team. Go and make one!</h1>\r\n                <Link to='/poke-builder'>\r\n                    <button className='clearTeam'>Make Team</button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    } else {\r\n        const savedTeam = JSON.parse(window.localStorage.getItem('savedTeam'))\r\n        const team = savedTeam.map(member => (\r\n            <TeamMemberInfo id={member.id} name={member.name} key={member.id} />\r\n        ))\r\n        return (\r\n            <div className='SavedTeam'>\r\n                <div className='savedTeamButtons'>\r\n                    <button onClick={handleDelete} className='clearTeam deleteButton'>Delete Team</button>\r\n                    <Link to='/poke-builder'>\r\n                        <button onClick={editTeam} className='clearTeam editTeam'>Edit Team</button>\r\n                    </Link>\r\n                </div>\r\n                <div className='savedTeamContainer'>\r\n                    {team}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default memo(SavedTeam)\r\n\r\n\r\n","import React from 'react'\r\nimport Background from '../Background/Background'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './SideDrawer.css'\r\n\r\nconst SideDrawer = ({ open, toggle }) => {\r\n    let attachedClasses = ['SideDrawer', 'Close']\r\n    if (open === true) {\r\n        attachedClasses = ['SideDrawer', 'Open']\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div>\r\n                    <img className='mainLogo drawerLogo' src=\"https://fontmeme.com/permalink/200113/d3dec358ccaaec9783bff84033b9b438.png\" alt=\"pokemon-font\" border=\"0\" />\r\n                </div>\r\n                <nav>\r\n                    <NavLink exact className='navLinks' to='/poke-builder/'>Builder</NavLink>\r\n                    <NavLink exact className='navLinks' to='/poke-builder/my-team'>Your Team</NavLink>\r\n                </nav>\r\n            </div>\r\n            {open ? <Background cancel={toggle} /> : null}\r\n        </div>\r\n    )\r\n}\r\nexport default SideDrawer\r\n","import React, { useState } from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Navbar from './components/UI/NavBar/Navbar'\r\nimport Builder from './components/builder/Builder';\r\nimport SavedTeam from './components/team-page/SavedTeam';\r\nimport SideDrawer from './components/UI/SideDrawer/SideDrawer';\r\nimport useToggleState from './hooks/useToggleState';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [editing, setEditing] = useState(false)\r\n  const [showSideDrawer, drawerToggle] = useToggleState()\r\n\r\n  const getTeam = (userTeam) => {\r\n    window.localStorage.setItem(\r\n      'savedTeam',\r\n      JSON.stringify(userTeam)\r\n    )\r\n  }\r\n\r\n  const editTeam = () => {\r\n    setEditing(true)\r\n  }\r\n\r\n  const deleteTeam = () => {\r\n    setEditing(false)\r\n    window.localStorage.clear()\r\n  }\r\n  return (\r\n    <div>\r\n      <Navbar open={drawerToggle} />\r\n      <Route exact path='/poke-builder/' render={() => <Builder saveTeam={getTeam} userTeam={editing ? JSON.parse(window.localStorage.getItem('savedTeam')) : ''} />} />\r\n      <Switch>\r\n        <Route exact path='/poke-builder/my-team' render={() => <SavedTeam editTeam={editTeam} deleteTeam={deleteTeam} />} />\r\n      </Switch>\r\n      <SideDrawer toggle={drawerToggle} open={showSideDrawer} />\r\n    </div>\r\n  )\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'));\r\n"],"sourceRoot":""}